= stylesheet_link_tag 'strobe'

:javascript
  var myColor = new Color(0,0,0);
  var activated = [false,false,false];
  
  $(document).ready(function() {
    $('#red').click(clickRed);
    $('#green').click(clickGreen);
    $('#blue').click(clickBlue);
    window.setInterval(strobeFuck,10);
  });

  
  //******************************************* Strobe Functions *******************************************************************

  function strobeFuck()
  {
    color = "#" + getHex(myColor.red) + getHex(myColor.green) + getHex(myColor.blue);
    $('#strobe').css({"background-color" : color});
    calcColor();
  }
  
  //******************************************* onClick Functions *******************************************************************
  function clickRed()
  {
    $('#red').toggleClass("selected");
    activated[0] = !activated[0];
  }
  
  function clickGreen()
  {
    $('#green').toggleClass("selected");
    activated[1] = !activated[1];
  }
  
  function clickBlue()
  {
    $('#blue').toggleClass("selected");
    activated[2] = !activated[2];
  }
  
  //******************************************* Objects *******************************************************************
  function Color(red,green,blue)
  {
    this.red = new Component(red);
    this.green = new Component(green);
    this.blue = new Component(blue);
  }
  //Intensity can range from 0 to 255
  function Component(intensity)
  {
    if(intensity < 0)
    {
      intensity *= -1;
    }
    this.intensity = intensity % 256;
    this.increment = true;
    if (intensity == 255)
    {
      this.increment = false;
    }
  }
  //*************************************** Utils *************************************************************************
  
  function getHex(component)
  {
    color = component.intensity.toString(16);
    if (color.length == 1)
    {
      color = "0" + color;
    }
    return color;
  }
  
  function calcColor()
  {
    if (activated[0])
    {
      calcComponent(myColor.red);
    }
    if (activated[1])
    {
      calcComponent(myColor.green);
    }
    if (activated[2])
    {
      calcComponent(myColor.blue);
    }
  
  }
  
  function calcComponent(component)
  {
    if(component.intensity == 255)
    {
      component.increment = false;
    }
    else if (component.intensity == 0)
    {
      component.increment = true;
    }
    if(component.increment == true)
    {
      component.intensity += 1;
    }
    else
    {
      component.intensity -= 1;
    }
  }
  
  // function strobeFuck()
  //   {
  //     resizeNum = Math.ceil(Math.random()*19) - 10;
  //     newHeight = parseInt($('#strobe').css("height").replace("px","")) + resizeNum;
  //     newWidth = parseInt($('#strobe').css("width").replace("px","")) + resizeNum;
  //     randomNum = Math.ceil(Math.random()* 16777216);
  //     hexValue = "#" + randomNum.toString(16);
  //     $('#strobe').css({"background-color" : hexValue, "height" : newHeight + "px", "width" : newWidth + "px"});
  //   }

  //*************************************** Html **************************************************************************
#colors
  #red
  #green
  #blue
#strobe


  